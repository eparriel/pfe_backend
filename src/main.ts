import { NestFactory } from '@nestjs/core';
import { AppModule } from './app.module';
import { ValidationPipe } from '@nestjs/common';
import { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';
import helmet from 'helmet';

async function bootstrap() {
  const app = await NestFactory.create(AppModule);
  
  // Configuration de s√©curit√© Helmet
  app.use(helmet());
  
  // Configuration CORS
  app.enableCors({
    origin: process.env.ALLOWED_ORIGINS?.split(',') || [
      'http://localhost:3000',
      'http://localhost:3001',
      'http://localhost:8080',
      'http://localhost:4200'
    ],
    methods: ['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS'],
    allowedHeaders: ['Content-Type', 'Authorization', 'X-Requested-With'],
    credentials: true,
    maxAge: 86400, // 24 heures
  });
  
  // Activer la validation globale
  app.useGlobalPipes(
    new ValidationPipe({
      whitelist: true,
      forbidNonWhitelisted: true,
      transform: true,
    }),
  );

  // Configuration Swagger
  const config = new DocumentBuilder()
    .setTitle('PFE Backend API')
    .setDescription('API backend pour le projet de fin d\'√©tudes avec authentification JWT et InfluxDB')
    .setVersion('1.0')
    .addTag('auth', 'Endpoints d\'authentification')
    .addTag('users', 'Gestion des utilisateurs')
    .addTag('influx', 'Gestion des donn√©es temporelles InfluxDB')
    .addBearerAuth(
      {
        type: 'http',
        scheme: 'bearer',
        bearerFormat: 'JWT',
        name: 'JWT',
        description: 'Entrez votre token JWT',
        in: 'header',
      },
      'JWT-auth', // This name here is important for references
    )
    .build();

  const document = SwaggerModule.createDocument(app, config);
  SwaggerModule.setup('api', app, document, {
    swaggerOptions: {
      persistAuthorization: true,
    },
  });
  
  await app.listen(process.env.PORT ?? 3000);
  
  console.log(`üöÄ Application is running on: http://localhost:${process.env.PORT ?? 3000}`);
  console.log(`üìö Documentation Swagger: http://localhost:${process.env.PORT ?? 3000}/api`);
  console.log(`üõ°Ô∏è  Security headers enabled with Helmet`);
  console.log(`üåê CORS configured for cross-origin requests`);
}
bootstrap();
