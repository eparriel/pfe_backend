# .github/workflows/ci-cd.yml

name: CI/CD Build & Test

on:
  push:
    branches: [main, feature/pipeline, feature/deploiement_azure]
  pull_request:

jobs:
  build-test:
    runs-on: ubuntu-latest
    name: Build & Test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Debug info
        run: |
          echo "=== Node version ==="
          node --version
          echo "=== NPM version ==="
          npm --version
          echo "=== Available scripts ==="
          npm run
          echo "=== TypeScript version ==="
          npx tsc --version

      - name: TypeScript compilation check
        run: npx tsc --noEmit

      - name: Run linting
        run: npm run lint

      - name: Build application
        run: npm run build

      - name: Run tests (optional)
        run: npm run test
        continue-on-error: true

  docker-deploy:
    needs: build-test
    runs-on: ubuntu-latest
    name: Docker Build & Deploy
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: docker compose build

      - name: Test Docker Compose stack
        run: |
          docker compose up -d
          sleep 20
          curl --fail http://localhost:3000 || (docker compose logs app && exit 1)
          docker compose down

  docker-push:
    needs: docker-deploy
    runs-on: ubuntu-latest
    name: Push to GitHub Container Registry
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/pfe-backend:latest .
          docker push ghcr.io/${{ github.repository_owner }}/pfe-backend:latest

  deploy-to-azure:
    needs: docker-push
    runs-on: ubuntu-latest
    name: Deploy to Azure VM
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Copy files to Azure VM
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.AZURE_VM_HOST }}
          username: ${{ secrets.AZURE_VM_USERNAME }}
          key: ${{ secrets.AZURE_VM_SSH_KEY }}
          source: "docker-compose.prod.yml,scripts/deploy-azure.sh"
          target: "/opt/pfe-backend"

      - name: Deploy to Azure VM
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.AZURE_VM_HOST }}
          username: ${{ secrets.AZURE_VM_USERNAME }}
          key: ${{ secrets.AZURE_VM_SSH_KEY }}
          script: |
            cd /opt/pfe-backend
            chmod +x scripts/deploy-azure.sh
            export GITHUB_REPOSITORY_OWNER=${{ github.repository_owner }}
            ./scripts/deploy-azure.sh

