version: '3.8'

services:
  app:
    build: .
    container_name: pfe_backend_app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/pfe_db
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_TOKEN=adminpassword
      - INFLUXDB_ORG=pfe_org
    depends_on:
      - postgres
      - rabbitmq
      - influxdb
    networks:
      - app_network
    restart: unless-stopped

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: pfe_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"  # AMQP protocol port
      - "15672:15672"  # Management interface port
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - app_network

  influxdb:
    image: influxdb:2.7
    container_name: influxdb
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: admin
      DOCKER_INFLUXDB_INIT_PASSWORD: adminpassword
      DOCKER_INFLUXDB_INIT_ORG: pfe_org
      DOCKER_INFLUXDB_INIT_BUCKET: pfe_bucket
    ports:
      - "8086:8086"
    volumes:
      - influxdb_data:/var/lib/influxdb2
    networks:
      - app_network

volumes:
  postgres_data:
  rabbitmq_data:
  influxdb_data:

networks:
  app_network:
    driver: bridge